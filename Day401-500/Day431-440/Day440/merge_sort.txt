11
10
5 7 31 949 6 45 2 1 4 12

#include<iostream>
#include<cstdio>
using namespace std;

int str[100];
int put_sp(){return putchar(32);}
int put_nl(){return putchar(10);}
int print_str()
{
    int i;
    i = 0;
    while(str[i] != 0)
    {
        putchar(str[i]);
        i = i + 1;
    }
}

int arr[100];
int temp[100];

int merge(int aBegin, int aEnd, int bBegin, int bEnd, int cBegin)
{
    while (aBegin != aEnd && bBegin != bEnd)
    {
        if(arr[bBegin] < arr[aBegin])
        {
            temp[cBegin] = arr[bBegin];
            bBegin = bBegin + 1;
        }else
        {
            temp[cBegin] = arr[aBegin];
            aBegin = aBegin + 1;
        }
        cBegin = cBegin + 1;
    }
    for (; aBegin != aEnd;) 
    {temp[cBegin] = arr[aBegin]; 
    aBegin = aBegin + 1; 
    cBegin = cBegin + 1;}

    for (; bBegin != bEnd;) 
    {temp[cBegin] = arr[bBegin]; 
    bBegin = bBegin + 1; 
    cBegin = cBegin + 1;}
}

int merge_sort(int l, int r) 
{
  if (r - l <= 1) return;

  int mid; mid = l + ((r - l) / 2);
  merge_sort(l, mid); merge_sort(mid, r);

  merge(l, mid, mid, r, l);

  int i;
  for (i = l; i < r; i = i + 1) arr[i] = temp[i];
}

int main()
{
    int len, i;

    cin >> len;

    for(i = 0; i < len; i = i + 1)
    {
        cin >> arr[i];
    }

    merge_sort(0, len);
    for(i = 0; i < len; i = i + 1)
    {
        cout << arr[i];
        put_sp();
    }
    put_nl();
    str[0] = 83; str[1] = 117; str[2] = 99; str[3] = 99; 
    str[4] = 101; str[5] = 115; str[6] = 115; str[7] = 33;
    str[8] = 0;
    print_str();
    put_nl();
    return 0;
}